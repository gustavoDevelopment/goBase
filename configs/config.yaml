application_name: "api-core-template-go-ms"
description: "Template for new microservices in Go"
application_version: "1.0.0"
entity_uuid: "4668d436-548e-41d2-9f95-d8c8420ba535"  # Generate a new UUID or keep empty for now
environment: "dev"

# Logging configuration
log:
  level: "DEBUG"
  development: true  # Enable development mode (colored output, etc.)

# HTTP server configuration
http:
  port: "8426"
  base_path: ${BASE_PATH}
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"

# Application specific configuration
app:
  # MongoDB configuration
  mongodb:
    uri: ${MONGO_URI}  # Set from environment variable
    database: ${MONGO_DATABASE}  # Set from environment variable
    timeout: ${TIMEOUT}  # Set from environment variable
  postgres:
    host: "${POSTGRES_HOST}"
    port: ${POSTGRES_PORT}
    user: "${POSTGRES_USER}"
    password: "${POSTGRES_PASSWORD}"
    dbname: "${POSTGRES_DBNAME}"
    sslmode: "${POSTGRES_SSLMODE}"
    maxOpenConns: ${POSTGRES_MAXOPENCONNS}
    maxIdleConns: ${POSTGRES_MAXIDLECONNS}
  oracle:
    host: "${ORACLE_HOST}"
    port: ${ORACLE_PORT}
    user: "${ORACLE_USER}"
    password: "${ORACLE_PASSWORD}"
    dbname: "${ORACLE_DBNAME}"
    maxOpenConns: ${ORACLE_MAXOPENCONNS}
    maxIdleConns: ${ORACLE_MAXIDLECONNS}
  
  # Security
  jwt_secret: "${JWT_SECRET}"
  password_salt_rounds: 10
  
  # JSON Configuration
  json_config_path: "${JSON_CONFIG_PATH}"  # Default: ./config/parameters.json
  
  # External services
  external_services:
    timeout: "30s"
    max_retries: 3
    retry_delay: "1s"
  
  # Feature flags
  features:
    enable_metrics: true
    enable_tracing: true
    maintenance_mode: false

# Observability
observability:
  metrics:
    enabled: true
    port: 9090
    path: "/metrics"
  tracing:
    enabled: true
    service_name: "business-orchestrator"
    collector_endpoint: ""  # e.g., "jaeger:14268/api/traces"
  
# Health check configuration
health:
  path: "/health"
  check_interval: "30s"
  timeout: "5s"

# Rate limiting
rate_limit:
  enabled: true
  rps: 100  # requests per second
  burst: 50

# CORS configuration
cors:
  allowed_origins:
    - "*"
  allowed_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "PATCH"
    - "OPTIONS"
  allowed_headers:
    - "Content-Type"
    - "Authorization"
  exposed_headers:
    - "Content-Length"
  allow_credentials: true
  max_age: 300  # seconds

# Timeouts
timeouts:
  database: "10s"
  http_client: "30s"
  grpc_client: "15s"
  shutdown: "30s"
